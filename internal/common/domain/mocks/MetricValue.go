// Code generated by mockery v2.48.0. DO NOT EDIT.

package mocks

import (
	domain "github.com/kberestov/metrics-tpl/internal/common/domain"
	mock "github.com/stretchr/testify/mock"
)

// MetricValue is an autogenerated mock type for the MetricValue type
type MetricValue struct {
	mock.Mock
}

// Kind provides a mock function with given fields:
func (_m *MetricValue) Kind() domain.MetricKind {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for Kind")
	}

	var r0 domain.MetricKind
	if rf, ok := ret.Get(0).(func() domain.MetricKind); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(domain.MetricKind)
	}

	return r0
}

// String provides a mock function with given fields:
func (_m *MetricValue) String() string {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for String")
	}

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// NewMetricValue creates a new instance of MetricValue. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMetricValue(t interface {
	mock.TestingT
	Cleanup(func())
}) *MetricValue {
	mock := &MetricValue{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
